# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart - CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Note: This workflow uses the latest stable version of the Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/dart-lang/setup-dart/blob/main/README.md
      # - uses: dart-lang/setup-dart@v1
      - uses: dart-lang/setup-dart@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      
      # Setup the flutter environment.
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable' # 'dev', 'alpha', default to: 'stable'
          # flutter-version: '1.12.x' # you can also specify exact version of flutter
      
      # Get flutter dependencies.
      - run: flutter pub get     
      # Statically analyze the Dart code for any errors.
      - run: flutter analyze .
      # Statically analyze the Dart code for any errors.
      - run: flutter test
      # Build web.
      - run: flutter build web --release
      # Cleaning index.html
      # - run: cat index.html
      #   working-directory: ./build/web
      # - run: sed -i '/base href/d' index.html #For MacOS : sed -i '' '/base href/d' index.html
      #   working-directory: ./build/web
      # - run: cat index.html
      #   working-directory: ./build/web
      # Deploy to github pages
      - uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.token }}
          publish_dir: ./build/web